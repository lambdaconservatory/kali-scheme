dnl Process this file with autoconf to produce a configure script.
dnl
dnl We might want AC_WORDS_BIGENDIAN in the future.
dnl We might want AC_CHAR_UNSIGNED in the future.
dnl
dnl The -cckr (K&R) flag is for the IRIX C compiler.  If this is left
dnl out, scheme48vm.c breaks because the rather pedantic SGI compiler
dnl decides that a char is not the same thing as an unsigned char.
dnl - Bryan O'Sullivan 3/94
define(S48_CFLAG_CKR, [dnl
echo checking ${CC} for -cckr
if test ${CC} != gcc; then
  echo "main(){int i=1;}" > conftest.c
  if CFLAGS="-cckr ${CFLAGS}" eval $compile
  then
    CFLAGS=$CFLAGS
  fi
fi
rm -f conftest*
])dnl
dnl
define(S48_POSIX_LIBC, [dnl
echo checking for RISC/OS POSIX library lossage
if test -f /usr/posix/usr/lib/libc.a; then
  LIBS="${LIBS} /usr/posix/usr/lib/libc.a"
fi
])dnl
dnl
define(S48_CFLAG_O2, [dnl
if test "z$CFLAGS" = "z"
  then if test "z$GCC" = "z"
    then CFLAGS="-O"
    else CFLAGS="-O2 -g"; fi; fi
])dnl
dnl
AC_INIT(scheme48vm.c)
     AC_CONFIG_HEADER(sysdep.h)
     AC_PROG_CC
     S48_CFLAG_CKR
     AC_ISC_POSIX
     AC_PROG_INSTALL
     AC_HAVE_LIBRARY(m, [LIBS="$LIBS -lm"])
     AC_HAVE_LIBRARY(dl, [LIBS="$LIBS -ldl"])
     AC_HAVE_LIBRARY(mld, [LIBS="$LIBS -lmld"])
     AC_HAVE_LIBRARY(nsl, [LIBS="$LIBS -lnsl"])
     AC_HAVE_LIBRARY(gen, [LIBS="$LIBS -lgen"])
     AC_HAVE_LIBRARY(socket, [LIBS="$LIBS -lsocket"])
     dnl Solaris 2.3 seems to need -lelf for nlist().  (tnx Bryan O'Sullivan)
     AC_HAVE_LIBRARY(elf, [LIBS="$LIBS -lelf"])
     S48_POSIX_LIBC
     AC_CONST
     AC_RETSIGTYPE
     AC_HAVE_HEADERS(libgen.h sys/timeb.h posix/time.h)
     AC_HAVE_FUNCS(dlopen gettimeofday ftime nlist select setitimer sigaction)
     AC_HAVE_FUNCS(socket chroot)
     AC_COMPILE_CHECK([n_name], [#include <nlist.h>], 
				[struct nlist name_list;
				 name_list.n_name = "foo";],
				AC_DEFINE(NLIST_HAS_N_NAME))
     AC_COMPILE_CHECK([_cnt], [#include <stdio.h>], 
			      [return stdin->_cnt;],
			      AC_DEFINE(FILE_HAS__CNT))
     S48_CFLAG_O2
     AC_SUBST(CFLAGS)
AC_OUTPUT(Makefile)
